{"version":3,"sources":["../src/imagerotator.js"],"names":["_lookOver","_resetOrientation","meta","Promise","resolve","reject","img","Image","onload","width","height","canvas","document","createElement","ctx","getContext","startX","startY","scale","size","ratio","ratioX","ratioY","lengthX","lengthY","orientation","transform","drawImage","toDataURL","src","srcBase64","_getDataUrl","reader","FileReader","event","target","result","readAsDataURL","file","BASE64_MARKER","_convertDataURIToBinary","dataURI","base64Index","indexOf","length","raw","window","atob","substring","Uint8Array","from","Array","prototype","map","call","x","charCodeAt","_getOrientation","view","DataView","buffer","getUint16","byteLength","offset","marker","getUint32","little","tags","i","split","then"],"mappings":"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","file":"imagerotator.js","sourcesContent":["import debug from 'debug';\n\n\nconst _lookOver = debug('ImageRotator');\n\nconst _resetOrientation = (meta) => new Promise(\n    (resolve, reject) => {\n        const img = new Image();\n\n        img.onload = function() {\n            const width = img.width;\n            const height = img.height;\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            let startX = 0;\n            let startY = 0;\n\n            let scale = 1;\n\n            if (meta.size) {\n                const ratio = meta.size[0] / meta.size[1];\n                const ratioX = meta.size[0] / width;\n                const ratioY = meta.size[1] / height;\n\n                if (ratioX > ratioY) {\n                    scale = ratioX;\n                    canvas.width = width;\n                    canvas.height = width / ratio;\n                    startY = (height * scale - meta.size[1]) / (2 * scale);\n                } else {\n                    scale = ratioY;\n                    canvas.height = height;\n                    canvas.width = height * ratio;\n                    startX = (width * scale - meta.size[0]) / (2 * scale);\n                }\n            } else {\n                canvas.width = width;\n                canvas.height = height;\n            }\n\n            const lengthX = canvas.width;\n            const lengthY = canvas.height;\n\n            if (4 < meta.orientation && meta.orientation < 9) {\n                canvas.width = canvas.height;\n                canvas.height = canvas.width;\n            }\n\n            switch (meta.orientation) {\n            case 2:\n                ctx.transform(-1, 0, 0, 1, canvas.width, 0);\n                break;\n            case 3:\n                ctx.transform(-1, 0, 0, -1, canvas.width, canvas.height);\n                break;\n            case 4:\n                ctx.transform(1, 0, 0, -1, 0, canvas.height);\n                break;\n            case 5:\n                ctx.transform(0, 1, 1, 0, 0, 0);\n                break;\n            case 6:\n                ctx.transform(0, 1, -1, 0, canvas.height, 0);\n                break;\n            case 7:\n                ctx.transform(0, -1, -1, 0, canvas.height, canvas.width);\n                break;\n            case 8:\n                ctx.transform(0, -1, 1, 0, 0, canvas.width);\n                break;\n            default:\n                break;\n            }\n\n            ctx.drawImage(img, startX, startY, lengthX, lengthY, 0, 0, lengthX, lengthY);\n\n            resolve(canvas.toDataURL());\n        };\n\n        img.src = meta.srcBase64;\n    }\n);\n\nconst _getDataUrl = (meta) => new Promise(\n    (resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (event) => {\n            meta.srcBase64 = event.target.result;\n            resolve(meta);\n        };\n\n        reader.readAsDataURL(meta.file);\n    }\n);\n\nconst BASE64_MARKER = ';base64,';\nconst _convertDataURIToBinary = (dataURI) => {\n    const base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n    const raw = window.atob(dataURI.substring(base64Index));\n\n    return Uint8Array.from(\n        Array.prototype.map.call(\n            raw,\n            (x) => x.charCodeAt(0)\n        )\n    );\n};\n\nconst _getOrientation = (meta) => new Promise(\n    (resolve, reject) => {\n        const view = new DataView(_convertDataURIToBinary(meta.srcBase64).buffer);\n\n        if (view.getUint16(0, false) !== 0xFFD8) {\n            resolve(meta);\n        }\n\n        const length = view.byteLength;\n        let offset = 2;\n\n        while (offset < length) {\n            const marker = view.getUint16(offset, false);\n            offset += 2;\n\n            if (marker === 0xFFE1) {\n                if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                    resolve(meta);\n                }\n                const little = view.getUint16(offset += 6, false) === 0x4949;\n                offset += view.getUint32(offset + 4, little);\n                const tags = view.getUint16(offset, little);\n                offset += 2;\n\n                for (let i = 0; i < tags; i++) {\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                        meta.orientation = view.getUint16(offset + (i * 12) + 8, little);\n                        resolve(meta);\n                    }\n                }\n            } else if ((marker & 0xFF00) !== 0xFF00) {\n                break;\n            } else {\n                offset += view.getUint16(offset, false);\n            }\n        }\n        resolve(meta);\n    }\n);\n\nexport default (file, size) => {\n    _lookOver('Rotate Image called');\n\n    return Promise.resolve(\n        {\n            file,\n            orientation: 1,\n            size: size && size.split('x'),\n        }\n    ).then(\n        (meta) => _getDataUrl(meta)\n    ).then(\n        (meta) => _getOrientation(meta)\n    ).then(\n        (meta) => _resetOrientation(meta)\n    );\n};\n"]}