{"version":3,"sources":["../src/imagerotator.js"],"names":["_lookOver","_resetOrientation","srcBase64","srcOrientation","Promise","resolve","reject","img","Image","onload","width","height","canvas","document","createElement","ctx","getContext","transform","drawImage","toDataURL","src","_getOrientation","file","reader","FileReader","event","arrayBuffer","target","result","view","DataView","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","orientation","base64js","fromByteArray","readAsArrayBuffer","slice","rotateImage","then","meta"],"mappings":"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","file":"imagerotator.js","sourcesContent":["import debug from 'debug';\nimport base64js from 'base64-js';\n\n\nconst _lookOver = debug('ImageRotator');\n\nconst _resetOrientation = (srcBase64, srcOrientation) => new Promise(\n    (resolve, reject) => {\n        const img = new Image();\n\n        img.onload = function() {\n            const width = img.width;\n            const height = img.height;\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            if (4 < srcOrientation && srcOrientation < 9) {\n                canvas.width = height;\n                canvas.height = width;\n            } else {\n                canvas.width = width;\n                canvas.height = height;\n            }\n\n            switch (srcOrientation) {\n            case 2:\n                ctx.transform(-1, 0, 0, 1, width, 0);\n                break;\n            case 3:\n                ctx.transform(-1, 0, 0, -1, width, height );\n                break;\n            case 4:\n                ctx.transform(1, 0, 0, -1, 0, height );\n                break;\n            case 5:\n                ctx.transform(0, 1, 1, 0, 0, 0);\n                break;\n            case 6:\n                ctx.transform(0, 1, -1, 0, height, 0);\n                break;\n            case 7:\n                ctx.transform(0, -1, -1, 0, height, width);\n                break;\n            case 8:\n                ctx.transform(0, -1, 1, 0, 0, width);\n                break;\n            default:\n                break;\n            }\n\n            ctx.drawImage(img, 0, 0);\n\n            resolve(canvas.toDataURL());\n        };\n\n        img.src = srcBase64;\n    }\n);\n\nconst _getOrientation = (file) => (resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = function(event) {\n        const arrayBuffer = event.target.result;\n        const view = new DataView(arrayBuffer);\n\n        if (view.getUint16(0, false) !== 0xFFD8) reject(-2);\n\n        const length = view.byteLength;\n        let offset = 2;\n\n        while (offset < length) {\n            const marker = view.getUint16(offset, false);\n            offset += 2;\n\n            if (marker === 0xFFE1) {\n                if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                    reject(-1);\n                }\n                const little = view.getUint16(offset += 6, false) === 0x4949;\n                offset += view.getUint32(offset + 4, little);\n                const tags = view.getUint16(offset, little);\n                offset += 2;\n\n                for (let i = 0; i < tags; i++) {\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                        resolve(\n                            {\n                                orientation: view.getUint16(offset + (i * 12) + 8, little),\n                                srcBase64: base64js.fromByteArray(arrayBuffer),\n                            }\n                        );\n                    }\n                }\n            } else if ((marker & 0xFF00) !== 0xFF00) {\n                break;\n            } else {\n                offset += view.getUint16(offset, false);\n            }\n        }\n        reject(-1);\n    };\n\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n};\n\nconst rotateImage = (file) => {\n    _lookOver('Rotate Image called');\n\n    return new Promise(\n        _getOrientation(file)\n    ).then(\n        (meta) => _resetOrientation(meta.srcBase64, meta.orientation)\n    );\n};\n\nexport default rotateImage;\n"]}