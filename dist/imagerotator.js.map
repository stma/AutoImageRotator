{"version":3,"sources":["../src/imagerotator.js"],"names":["_lookOver","_resetOrientation","srcBase64","srcOrientation","Promise","resolve","reject","img","Image","onload","width","height","canvas","document","createElement","ctx","getContext","transform","drawImage","toDataURL","src","_getDataUrl","meta","reader","FileReader","event","target","result","readAsDataURL","file","_getOrientation","arrayBuffer","view","DataView","orientation","getUint16","console","log","length","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","slice","then"],"mappings":"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","file":"imagerotator.js","sourcesContent":["import debug from 'debug';\n\n\nconst _lookOver = debug('ImageRotator');\n\nconst _resetOrientation = (srcBase64, srcOrientation) => new Promise(\n    (resolve, reject) => {\n        const img = new Image();\n\n        img.onload = function() {\n            const width = img.width;\n            const height = img.height;\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n\n            if (4 < srcOrientation && srcOrientation < 9) {\n                canvas.width = height;\n                canvas.height = width;\n            } else {\n                canvas.width = width;\n                canvas.height = height;\n            }\n\n            switch (srcOrientation) {\n            case 2:\n                ctx.transform(-1, 0, 0, 1, width, 0);\n                break;\n            case 3:\n                ctx.transform(-1, 0, 0, -1, width, height );\n                break;\n            case 4:\n                ctx.transform(1, 0, 0, -1, 0, height );\n                break;\n            case 5:\n                ctx.transform(0, 1, 1, 0, 0, 0);\n                break;\n            case 6:\n                ctx.transform(0, 1, -1, 0, height, 0);\n                break;\n            case 7:\n                ctx.transform(0, -1, -1, 0, height, width);\n                break;\n            case 8:\n                ctx.transform(0, -1, 1, 0, 0, width);\n                break;\n            default:\n                break;\n            }\n\n            ctx.drawImage(img, 0, 0);\n\n            resolve(canvas.toDataURL());\n        };\n\n        img.src = srcBase64;\n    }\n);\n\nconst _getDataUrl = (meta) => new Promise(\n    (resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (event) => {\n            meta.srcBase64 = event.target.result;\n            resolve(meta);\n        };\n\n        reader.readAsDataURL(meta.file);\n    }\n);\n\nconst _getOrientation = (file) => (resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n        const arrayBuffer = event.target.result;\n        const view = new DataView(arrayBuffer);\n\n        const result = {\n            orientation: 1,\n            file,\n        };\n\n        if (view.getUint16(0, false) !== 0xFFD8) {\n            console.log('Error -2');\n            resolve(result);\n        }\n\n        const length = view.byteLength;\n        let offset = 2;\n\n        while (offset < length) {\n            const marker = view.getUint16(offset, false);\n            offset += 2;\n\n            if (marker === 0xFFE1) {\n                if (view.getUint32(offset += 2, false) !== 0x45786966) {\n                    console.log('Error: -1');\n                    resolve(result);\n                }\n                const little = view.getUint16(offset += 6, false) === 0x4949;\n                offset += view.getUint32(offset + 4, little);\n                const tags = view.getUint16(offset, little);\n                offset += 2;\n\n                for (let i = 0; i < tags; i++) {\n                    if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                        result.orientation = view.getUint16(offset + (i * 12) + 8, little);\n                        resolve(result);\n                    }\n                }\n            } else if ((marker & 0xFF00) !== 0xFF00) {\n                break;\n            } else {\n                offset += view.getUint16(offset, false);\n            }\n        }\n        console.log('Error no clue');\n        resolve(result);\n    };\n\n    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n};\n\nexport default (file) => {\n    _lookOver('Rotate Image called');\n\n    return new Promise(\n        _getOrientation(file)\n    ).then(\n        (meta) => _getDataUrl(meta)\n    ).then(\n        (meta) => _resetOrientation(meta.srcBase64, meta.orientation)\n    );\n};\n"]}